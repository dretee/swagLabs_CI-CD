name: Trying out a new reporting system

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-selenium-Test:
    name: Run selenium test
    runs-on: ubuntu-latest

    steps:
    # Checkout/download the repo to run on the ubuntu-latest version VM
      - name: Checkout Repo
        uses: actions/checkout@v3
        
    # Downloading Python latest version 
      - name: Download Python onto the Virtual Machine
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

    # Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3  
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

    # Set up Chrome, Firefox, GeckoDriver, and ChromeDriver
      - name: Set up Chrome, Firefox, GeckoDriver, and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          wget -N https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv -f chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          sudo apt-get install -y firefox
          wget -N https://github.com/mozilla/geckodriver/releases/latest/download/geckodriver-v0.33.0-linux64.tar.gz
          tar -xvzf geckodriver-v0.33.0-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/geckodriver
        
        env:
          CHROME_BIN: /usr/bin/google-chrome
          CHROME_DRIVER: /usr/local/bin/chromedriver   
          FIREFOX_BIN: /usr/bin/firefox
          GECKO_DRIVER: /usr/local/bin/geckodriver

    # Installing dependencies for running the selenium test
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Running the test on the Firefox browser 
      - name: Running test on Firefox browser
        run: |
          cd test
          mkdir -p reports 
          pytest testLogin.py --browser=firefox --html=reports/Firefox-report.html --maxfail=2
        continue-on-error: false   # stop the pipeline if the tests fail

    # Running the test on the Chrome browser 
      - name: Running test on Chrome browser
        run: |
          cd test
          mkdir -p reports 
          pytest testLogin.py --browser=chrome --html=reports/chrome-report.html --maxfail=2
        continue-on-error: true 

    # Upload Chrome reports
      - name: Upload results for Chrome test
        uses: actions/upload-artifact@v3
        with:
          name: selenium-test-chrome-results
          path: test/reports/chrome-report.html

    # Upload Firefox results 
      - name: Upload results for Firefox test
        uses: actions/upload-artifact@v3
        with:
          name: selenium-test-firefox-results
          path: test/reports/Firefox-report.html
